#ifndef __sm_computeProximityInfo_h__
#define __sm_computeProximityInfo_h__
#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
struct sm_core_compiler_SphereTag{double radius;};typedef struct
sm_core_compiler_SphereTag sm_core_compiler_Sphere;struct
sm_core_compiler_BrickTag{pm_math_Vector3 size;};typedef struct
sm_core_compiler_BrickTag sm_core_compiler_Brick;struct
sm_core_compiler_CylinderTag{double radius;double length;};typedef struct
sm_core_compiler_CylinderTag sm_core_compiler_Cylinder;real_T
sm_core_compiler_computeProximityInfoSphereSphere(const sm_core_compiler_Sphere
*sphere0,const sm_core_compiler_Sphere*sphere1,const pm_math_Transform3*T0,
const pm_math_Transform3*T1,pm_math_Vector3*extremePoint0,pm_math_Vector3*
extremePoint1,pm_math_Vector3*normal0,pm_math_Vector3*normal1);real_T
sm_core_compiler_computeProximityInfoBrickSphere(const sm_core_compiler_Brick*
brick,const sm_core_compiler_Sphere*sphere,const pm_math_Transform3*TBrick,
const pm_math_Transform3*TSphere,pm_math_Vector3*extremePointBrick,
pm_math_Vector3*extremePointSphere,pm_math_Vector3*normalBrick,pm_math_Vector3
*normalSphere);real_T sm_core_compiler_computeProximityInfoCylinderSphere(
const sm_core_compiler_Cylinder*cylinder,const sm_core_compiler_Sphere*sphere,
const pm_math_Transform3*TCylinder,const pm_math_Transform3*TSphere,
pm_math_Vector3*extremePointCylinder,pm_math_Vector3*extremePointSphere,
pm_math_Vector3*normalCylinder,pm_math_Vector3*normalSphere);real_T
sm_core_compiler_computeProximityInfoCylinderCylinder(const
sm_core_compiler_Cylinder*cylinderA,const sm_core_compiler_Cylinder*cylinderB,
const pm_math_Transform3*TCylA,const pm_math_Transform3*TCylb,pm_math_Vector3*
extremePointCylA,pm_math_Vector3*extremePointCylB,pm_math_Vector3*normalCylA,
pm_math_Vector3*normalCylB);real_T
sm_core_compiler_computeProximityInfoBrickCylinder(const sm_core_compiler_Brick
*brick,const sm_core_compiler_Cylinder*cylinder,const pm_math_Transform3*
TBrick,const pm_math_Transform3*TCylinder,pm_math_Vector3*extremePointBrick,
pm_math_Vector3*extremePointCylinder,pm_math_Vector3*normalBrick,
pm_math_Vector3*normalCylinder);real_T
sm_core_compiler_computeProximityInfoBrickBrick(const sm_core_compiler_Brick*
brick0,const sm_core_compiler_Brick*brick1,const pm_math_Transform3*T0,const
pm_math_Transform3*T1,pm_math_Vector3*extremePoint0,pm_math_Vector3*
extremePoint1,pm_math_Vector3*normal0,pm_math_Vector3*normal1);
#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* __sm_computeProximityInfo_h__ */
